// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Projekat_PR111_2019.Data;

#nullable disable

namespace Web_Projekat_PR111_2019.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Administrator", b =>
                {
                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnickoIme");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.ToTable("Administratori");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Artikal", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("IDProdavca")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("KolicinaArtikla")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("IDProdavca");

                    b.ToTable("Artikal");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.ArtikalIPorudzbina", b =>
                {
                    b.Property<int>("IDPorudzbine")
                        .HasColumnType("int");

                    b.Property<int>("IDArtikla")
                        .HasColumnType("int");

                    b.Property<string>("ArtikalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CijenaPorudzbine")
                        .HasColumnType("int");

                    b.Property<int>("KolicinaArtikla")
                        .HasColumnType("int");

                    b.Property<int>("PorudzbinaId")
                        .HasColumnType("int");

                    b.HasKey("IDPorudzbine", "IDArtikla");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("PorudzbinaId");

                    b.ToTable("ArtikliIPorudzbine");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Kupac", b =>
                {
                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusPorudzbine")
                        .HasColumnType("int");

                    b.HasKey("KorisnickoIme");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.ToTable("Kupac");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Porudzbina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtikalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKupca")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("KomentarPorudzbine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdavacKorisnickoIme")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusPorudzbine")
                        .HasColumnType("int");

                    b.Property<DateTime>("VrijemeDostave")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VrijemePOrudzbine")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("IDKupca");

                    b.HasIndex("ProdavacKorisnickoIme");

                    b.ToTable("Porudzbina");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Prodavac", b =>
                {
                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdministratorKorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImePrezime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusPoruzbine")
                        .HasColumnType("int");

                    b.Property<int>("Verifikovan")
                        .HasColumnType("int");

                    b.HasKey("KorisnickoIme");

                    b.HasIndex("AdministratorKorisnickoIme");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.ToTable("Prodavci");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Artikal", b =>
                {
                    b.HasOne("Web_Projekat_PR111_2019.Models.Prodavac", "Prodavac")
                        .WithMany("Artikli")
                        .HasForeignKey("IDProdavca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prodavac");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.ArtikalIPorudzbina", b =>
                {
                    b.HasOne("Web_Projekat_PR111_2019.Models.Artikal", "Artikal")
                        .WithMany("ArtikliIporudzbine")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Web_Projekat_PR111_2019.Models.Porudzbina", "Porudzbina")
                        .WithMany("ArtikliIPorudzbine")
                        .HasForeignKey("PorudzbinaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("Porudzbina");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Kupac", b =>
                {
                    b.HasOne("Web_Projekat_PR111_2019.Models.Administrator", "Administrator")
                        .WithMany("Kupci")
                        .HasForeignKey("KorisnickoIme")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Porudzbina", b =>
                {
                    b.HasOne("Web_Projekat_PR111_2019.Models.Artikal", "Artikal")
                        .WithMany()
                        .HasForeignKey("ArtikalId");

                    b.HasOne("Web_Projekat_PR111_2019.Models.Kupac", "Kupac")
                        .WithMany("Porudzbine")
                        .HasForeignKey("IDKupca")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Web_Projekat_PR111_2019.Models.Prodavac", null)
                        .WithMany("Porudzbine")
                        .HasForeignKey("ProdavacKorisnickoIme");

                    b.Navigation("Artikal");

                    b.Navigation("Kupac");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Prodavac", b =>
                {
                    b.HasOne("Web_Projekat_PR111_2019.Models.Administrator", "Administrator")
                        .WithMany("Prodavci")
                        .HasForeignKey("AdministratorKorisnickoIme")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Administrator", b =>
                {
                    b.Navigation("Kupci");

                    b.Navigation("Prodavci");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Artikal", b =>
                {
                    b.Navigation("ArtikliIporudzbine");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Kupac", b =>
                {
                    b.Navigation("Porudzbine");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Porudzbina", b =>
                {
                    b.Navigation("ArtikliIPorudzbine");
                });

            modelBuilder.Entity("Web_Projekat_PR111_2019.Models.Prodavac", b =>
                {
                    b.Navigation("Artikli");

                    b.Navigation("Porudzbine");
                });
#pragma warning restore 612, 618
        }
    }
}
